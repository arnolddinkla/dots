From 47fba7ee368315d5eaf81d75900e9e4a1f15d25c Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 02:44:20 +0100
Subject: [PATCH 01/19] Applying personal customisations.

---
 config.def.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/config.def.h b/config.def.h
index 1c0b587..560e243 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,12 +1,12 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
+static const char *fonts[]          = { "Gohu GohuFont:size=8" };
+static const char dmenufont[]       = "Gohu GohuFont:size=8";
 static const char col_gray1[]       = "#222222";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
@@ -44,7 +44,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
-- 
2.27.0


From a5266444742120cce1654715bf08aae53b2d90dd Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 02:51:25 +0100
Subject: [PATCH 02/19] Applied the alpha patch.

---
 config.def.h |  7 ++++++
 config.mk    |  2 +-
 drw.c        | 26 ++++++++++++-----------
 drw.h        |  9 +++++---
 dwm.c        | 60 ++++++++++++++++++++++++++++++++++++++++++++++------
 5 files changed, 82 insertions(+), 22 deletions(-)

diff --git a/config.def.h b/config.def.h
index 560e243..c2ddf03 100644
--- a/config.def.h
+++ b/config.def.h
@@ -12,11 +12,18 @@ static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
 static const char col_cyan[]        = "#005577";
+static const unsigned int baralpha = 255 * 0.9;
+static const unsigned int borderalpha = 255 * 0.9;
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
 	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
 };
+static const unsigned int alphas[][3]      = {
+	/*               fg      bg        border     */
+	[SchemeNorm] = { OPAQUE, baralpha, borderalpha },
+	[SchemeSel]  = { OPAQUE, baralpha, borderalpha },
+};
 
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
diff --git a/config.mk b/config.mk
index 7084c33..21b5404 100644
--- a/config.mk
+++ b/config.mk
@@ -22,7 +22,7 @@ FREETYPEINC = /usr/include/freetype2
 
 # includes and libs
 INCS = -I${X11INC} -I${FREETYPEINC}
-LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}
+LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lXrender
 
 # flags
 CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
diff --git a/drw.c b/drw.c
index 4cdbcbe..fe3aadd 100644
--- a/drw.c
+++ b/drw.c
@@ -61,7 +61,7 @@ utf8decode(const char *c, long *u, size_t clen)
 }
 
 Drw *
-drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)
+drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h, Visual *visual, unsigned int depth, Colormap cmap)
 {
 	Drw *drw = ecalloc(1, sizeof(Drw));
 
@@ -70,8 +70,11 @@ drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h
 	drw->root = root;
 	drw->w = w;
 	drw->h = h;
-	drw->drawable = XCreatePixmap(dpy, root, w, h, DefaultDepth(dpy, screen));
-	drw->gc = XCreateGC(dpy, root, 0, NULL);
+	drw->visual = visual;
+	drw->depth = depth;
+	drw->cmap = cmap;
+	drw->drawable = XCreatePixmap(dpy, root, w, h, depth);
+	drw->gc = XCreateGC(dpy, drw->drawable, 0, NULL);
 	XSetLineAttributes(dpy, drw->gc, 1, LineSolid, CapButt, JoinMiter);
 
 	return drw;
@@ -87,7 +90,7 @@ drw_resize(Drw *drw, unsigned int w, unsigned int h)
 	drw->h = h;
 	if (drw->drawable)
 		XFreePixmap(drw->dpy, drw->drawable);
-	drw->drawable = XCreatePixmap(drw->dpy, drw->root, w, h, DefaultDepth(drw->dpy, drw->screen));
+	drw->drawable = XCreatePixmap(drw->dpy, drw->root, w, h, drw->depth);
 }
 
 void
@@ -194,21 +197,22 @@ drw_fontset_free(Fnt *font)
 }
 
 void
-drw_clr_create(Drw *drw, Clr *dest, const char *clrname)
+drw_clr_create(Drw *drw, Clr *dest, const char *clrname, unsigned int alpha)
 {
 	if (!drw || !dest || !clrname)
 		return;
 
-	if (!XftColorAllocName(drw->dpy, DefaultVisual(drw->dpy, drw->screen),
-	                       DefaultColormap(drw->dpy, drw->screen),
+	if (!XftColorAllocName(drw->dpy, drw->visual, drw->cmap,
 	                       clrname, dest))
 		die("error, cannot allocate color '%s'", clrname);
+
+	dest->pixel = (dest->pixel & 0x00ffffffU) | (alpha << 24);
 }
 
 /* Wrapper to create color schemes. The caller has to call free(3) on the
  * returned color scheme when done using it. */
 Clr *
-drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)
+drw_scm_create(Drw *drw, const char *clrnames[], const unsigned int alphas[], size_t clrcount)
 {
 	size_t i;
 	Clr *ret;
@@ -218,7 +222,7 @@ drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)
 		return NULL;
 
 	for (i = 0; i < clrcount; i++)
-		drw_clr_create(drw, &ret[i], clrnames[i]);
+		drw_clr_create(drw, &ret[i], clrnames[i], alphas[i]);
 	return ret;
 }
 
@@ -274,9 +278,7 @@ drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lp
 	} else {
 		XSetForeground(drw->dpy, drw->gc, drw->scheme[invert ? ColFg : ColBg].pixel);
 		XFillRectangle(drw->dpy, drw->drawable, drw->gc, x, y, w, h);
-		d = XftDrawCreate(drw->dpy, drw->drawable,
-		                  DefaultVisual(drw->dpy, drw->screen),
-		                  DefaultColormap(drw->dpy, drw->screen));
+		d = XftDrawCreate(drw->dpy, drw->drawable, drw->visual, drw->cmap);
 		x += lpad;
 		w -= lpad;
 	}
diff --git a/drw.h b/drw.h
index 4bcd5ad..a56f523 100644
--- a/drw.h
+++ b/drw.h
@@ -20,6 +20,9 @@ typedef struct {
 	Display *dpy;
 	int screen;
 	Window root;
+	Visual *visual;
+	unsigned int depth;
+	Colormap cmap;
 	Drawable drawable;
 	GC gc;
 	Clr *scheme;
@@ -27,7 +30,7 @@ typedef struct {
 } Drw;
 
 /* Drawable abstraction */
-Drw *drw_create(Display *dpy, int screen, Window win, unsigned int w, unsigned int h);
+Drw *drw_create(Display *dpy, int screen, Window win, unsigned int w, unsigned int h, Visual *visual, unsigned int depth, Colormap cmap);
 void drw_resize(Drw *drw, unsigned int w, unsigned int h);
 void drw_free(Drw *drw);
 
@@ -38,8 +41,8 @@ unsigned int drw_fontset_getwidth(Drw *drw, const char *text);
 void drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h);
 
 /* Colorscheme abstraction */
-void drw_clr_create(Drw *drw, Clr *dest, const char *clrname);
-Clr *drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount);
+void drw_clr_create(Drw *drw, Clr *dest, const char *clrname, unsigned int alpha);
+Clr *drw_scm_create(Drw *drw, const char *clrnames[], const unsigned int alphas[], size_t clrcount);
 
 /* Cursor abstraction */
 Cur *drw_cur_create(Drw *drw, int shape);
diff --git a/dwm.c b/dwm.c
index 9fd0286..61e900a 100644
--- a/dwm.c
+++ b/dwm.c
@@ -57,6 +57,8 @@
 #define TAGMASK                 ((1 << LENGTH(tags)) - 1)
 #define TEXTW(X)                (drw_fontset_getwidth(drw, (X)) + lrpad)
 
+#define OPAQUE                  0xffU
+
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
 enum { SchemeNorm, SchemeSel }; /* color schemes */
@@ -233,6 +235,7 @@ static Monitor *wintomon(Window w);
 static int xerror(Display *dpy, XErrorEvent *ee);
 static int xerrordummy(Display *dpy, XErrorEvent *ee);
 static int xerrorstart(Display *dpy, XErrorEvent *ee);
+static void xinitvisual();
 static void zoom(const Arg *arg);
 
 /* variables */
@@ -269,6 +272,11 @@ static Drw *drw;
 static Monitor *mons, *selmon;
 static Window root, wmcheckwin;
 
+static int useargb = 0;
+static Visual *visual;
+static int depth;
+static Colormap cmap;
+
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
@@ -1542,7 +1550,8 @@ setup(void)
 	sw = DisplayWidth(dpy, screen);
 	sh = DisplayHeight(dpy, screen);
 	root = RootWindow(dpy, screen);
-	drw = drw_create(dpy, screen, root, sw, sh);
+	xinitvisual();
+	drw = drw_create(dpy, screen, root, sw, sh, visual, depth, cmap);
 	if (!drw_fontset_create(drw, fonts, LENGTH(fonts)))
 		die("no fonts could be loaded.");
 	lrpad = drw->fonts->h;
@@ -1570,7 +1579,7 @@ setup(void)
 	/* init appearance */
 	scheme = ecalloc(LENGTH(colors), sizeof(Clr *));
 	for (i = 0; i < LENGTH(colors); i++)
-		scheme[i] = drw_scm_create(drw, colors[i], 3);
+		scheme[i] = drw_scm_create(drw, colors[i], alphas[i], 3);
 	/* init bars */
 	updatebars();
 	updatestatus();
@@ -1807,16 +1816,18 @@ updatebars(void)
 	Monitor *m;
 	XSetWindowAttributes wa = {
 		.override_redirect = True,
-		.background_pixmap = ParentRelative,
+		.background_pixel = 0,
+		.border_pixel = 0,
+		.colormap = cmap,
 		.event_mask = ButtonPressMask|ExposureMask
 	};
 	XClassHint ch = {"dwm", "dwm"};
 	for (m = mons; m; m = m->next) {
 		if (m->barwin)
 			continue;
-		m->barwin = XCreateWindow(dpy, root, m->wx, m->by, m->ww, bh, 0, DefaultDepth(dpy, screen),
-				CopyFromParent, DefaultVisual(dpy, screen),
-				CWOverrideRedirect|CWBackPixmap|CWEventMask, &wa);
+		m->barwin = XCreateWindow(dpy, root, m->wx, m->by, m->ww, bh, 0, depth,
+		                          InputOutput, visual,
+		                          CWOverrideRedirect|CWBackPixel|CWBorderPixel|CWColormap|CWEventMask, &wa);
 		XDefineCursor(dpy, m->barwin, cursor[CurNormal]->cursor);
 		XMapRaised(dpy, m->barwin);
 		XSetClassHint(dpy, m->barwin, &ch);
@@ -2113,6 +2124,43 @@ xerrorstart(Display *dpy, XErrorEvent *ee)
 	return -1;
 }
 
+void
+xinitvisual()
+{
+	XVisualInfo *infos;
+	XRenderPictFormat *fmt;
+	int nitems;
+	int i;
+
+	XVisualInfo tpl = {
+		.screen = screen,
+		.depth = 32,
+		.class = TrueColor
+	};
+	long masks = VisualScreenMask | VisualDepthMask | VisualClassMask;
+
+	infos = XGetVisualInfo(dpy, masks, &tpl, &nitems);
+	visual = NULL;
+	for(i = 0; i < nitems; i ++) {
+		fmt = XRenderFindVisualFormat(dpy, infos[i].visual);
+		if (fmt->type == PictTypeDirect && fmt->direct.alphaMask) {
+			visual = infos[i].visual;
+			depth = infos[i].depth;
+			cmap = XCreateColormap(dpy, root, visual, AllocNone);
+			useargb = 1;
+			break;
+		}
+	}
+
+	XFree(infos);
+
+	if (! visual) {
+		visual = DefaultVisual(dpy, screen);
+		depth = DefaultDepth(dpy, screen);
+		cmap = DefaultColormap(dpy, screen);
+	}
+}
+
 void
 zoom(const Arg *arg)
 {
-- 
2.27.0


From 16447771ab6f7f00cfc4d39843e27be444e04410 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 03:07:33 +0100
Subject: [PATCH 03/19] Added window rules.

---
 config.def.h | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/config.def.h b/config.def.h
index c2ddf03..bcc3094 100644
--- a/config.def.h
+++ b/config.def.h
@@ -33,9 +33,12 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class			instance title tags mask isfloating monitor */
+	{ "firefox",		NULL,    NULL, 1 << 1,   0,         -1 },
+	{ "discord",		NULL,    NULL, 1 << 2,   0,         -1 },
+	{ "Thunderbird",	NULL,    NULL, 1 << 3,   0,         -1 },
+	{ "Unity",			NULL,    NULL, 1 << 4,   0,         -1 },
+	{ "st",				NULL,    NULL, 0     ,   0,         -1 },
 };
 
 /* layout(s) */
-- 
2.27.0


From d7d64b1bec2628db423dc756560737c008390c2c Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 03:26:08 +0100
Subject: [PATCH 04/19] Applied the swallow patch.

---
 config.def.h |  14 ++--
 config.mk    |   2 +-
 dwm.c        | 218 +++++++++++++++++++++++++++++++++++++++++++++++++--
 3 files changed, 222 insertions(+), 12 deletions(-)

diff --git a/config.def.h b/config.def.h
index bcc3094..1bfb609 100644
--- a/config.def.h
+++ b/config.def.h
@@ -3,6 +3,7 @@
 /* appearance */
 static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
+static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "Gohu GohuFont:size=8" };
@@ -33,12 +34,13 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class			instance title tags mask isfloating monitor */
-	{ "firefox",		NULL,    NULL, 1 << 1,   0,         -1 },
-	{ "discord",		NULL,    NULL, 1 << 2,   0,         -1 },
-	{ "Thunderbird",	NULL,    NULL, 1 << 3,   0,         -1 },
-	{ "Unity",			NULL,    NULL, 1 << 4,   0,         -1 },
-	{ "st",				NULL,    NULL, 0     ,   0,         -1 },
+	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor */
+	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1 },
+	{ "discord",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1 },
+	{ "Thunderbird", NULL,     NULL,           1 << 3,    0,          0,          -1,        -1 },
+	{ "Unity",       NULL,     NULL,           1 << 4,    0,          0,          -1,        -1 },
+	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1 },
+	{ NULL,          NULL,     "Event Tester", 0,         1,          0,           1,        -1 }, /* xev */
 };
 
 /* layout(s) */
diff --git a/config.mk b/config.mk
index 21b5404..b26b55d 100644
--- a/config.mk
+++ b/config.mk
@@ -22,7 +22,7 @@ FREETYPEINC = /usr/include/freetype2
 
 # includes and libs
 INCS = -I${X11INC} -I${FREETYPEINC}
-LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lXrender
+LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lXrender -lX11-xcb -lxcb -lxcb-res
 
 # flags
 CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
diff --git a/dwm.c b/dwm.c
index 61e900a..b2bc65b 100644
--- a/dwm.c
+++ b/dwm.c
@@ -40,6 +40,8 @@
 #include <X11/extensions/Xinerama.h>
 #endif /* XINERAMA */
 #include <X11/Xft/Xft.h>
+#include <X11/Xlib-xcb.h>
+#include <xcb/res.h>
 
 #include "drw.h"
 #include "util.h"
@@ -94,9 +96,11 @@ struct Client {
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
 	int bw, oldbw;
 	unsigned int tags;
-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
+	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;
+	pid_t pid;
 	Client *next;
 	Client *snext;
+	Client *swallowing;
 	Monitor *mon;
 	Window win;
 };
@@ -140,6 +144,8 @@ typedef struct {
 	const char *title;
 	unsigned int tags;
 	int isfloating;
+	int isterminal;
+	int noswallow;
 	int monitor;
 } Rule;
 
@@ -238,9 +244,16 @@ static int xerrorstart(Display *dpy, XErrorEvent *ee);
 static void xinitvisual();
 static void zoom(const Arg *arg);
 
+static pid_t getparentprocess(pid_t p);
+static int isdescprocess(pid_t p, pid_t c);
+static Client *swallowingclient(Window w);
+static Client *termforwin(const Client *c);
+static pid_t winpid(Window w);
+
 /* variables */
 static const char broken[] = "broken";
 static char stext[256];
+static int scanner;
 static int screen;
 static int sw, sh;           /* X display screen geometry width, height */
 static int bh, blw = 0;      /* bar geometry */
@@ -277,6 +290,8 @@ static Visual *visual;
 static int depth;
 static Colormap cmap;
 
+static xcb_connection_t *xcon;
+
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
@@ -294,6 +309,7 @@ applyrules(Client *c)
 	XClassHint ch = { NULL, NULL };
 
 	/* rule matching */
+	c->noswallow = -1;
 	c->isfloating = 0;
 	c->tags = 0;
 	XGetClassHint(dpy, c->win, &ch);
@@ -306,6 +322,8 @@ applyrules(Client *c)
 		&& (!r->class || strstr(class, r->class))
 		&& (!r->instance || strstr(instance, r->instance)))
 		{
+			c->isterminal = r->isterminal;
+			c->noswallow  = r->noswallow;
 			c->isfloating = r->isfloating;
 			c->tags |= r->tags;
 			for (m = mons; m && m->num != r->monitor; m = m->next);
@@ -422,6 +440,61 @@ attachstack(Client *c)
 	c->mon->stack = c;
 }
 
+void
+swallow(Client *p, Client *c)
+{
+	Client *s;
+
+	if (c->noswallow > 0 || c->isterminal)
+		return;
+	if (c->noswallow < 0 && !swallowfloating && c->isfloating)
+		return;
+
+	detach(c);
+	detachstack(c);
+
+	setclientstate(c, WithdrawnState);
+	XUnmapWindow(dpy, p->win);
+
+	p->swallowing = c;
+	c->mon = p->mon;
+
+	Window w = p->win;
+	p->win = c->win;
+	c->win = w;
+
+	XChangeProperty(dpy, c->win, netatom[NetClientList], XA_WINDOW, 32, PropModeReplace,
+		(unsigned char *) &(p->win), 1);
+
+	updatetitle(p);
+	s = scanner ? c : p;
+	XMoveResizeWindow(dpy, p->win, s->x, s->y, s->w, s->h);
+	arrange(p->mon);
+	configure(p);
+	updateclientlist();
+}
+
+void
+unswallow(Client *c)
+{
+	c->win = c->swallowing->win;
+
+	free(c->swallowing);
+	c->swallowing = NULL;
+
+	XDeleteProperty(dpy, c->win, netatom[NetClientList]);
+
+	/* unfullscreen the client */
+	setfullscreen(c, 0);
+	updatetitle(c);
+	arrange(c->mon);
+	XMapWindow(dpy, c->win);
+	XMoveResizeWindow(dpy, c->win, c->x, c->y, c->w, c->h);
+	setclientstate(c, NormalState);
+	focus(NULL);
+	arrange(c->mon);
+}
+
 void
 buttonpress(XEvent *e)
 {
@@ -661,6 +734,9 @@ destroynotify(XEvent *e)
 
 	if ((c = wintoclient(ev->window)))
 		unmanage(c, 1);
+
+	else if ((c = swallowingclient(ev->window)))
+		unmanage(c->swallowing, 1);
 }
 
 void
@@ -1026,12 +1102,13 @@ killclient(const Arg *arg)
 void
 manage(Window w, XWindowAttributes *wa)
 {
-	Client *c, *t = NULL;
+	Client *c, *t = NULL, *term = NULL;
 	Window trans = None;
 	XWindowChanges wc;
 
 	c = ecalloc(1, sizeof(Client));
 	c->win = w;
+	c->pid = winpid(w);
 	/* geometry */
 	c->x = c->oldx = wa->x;
 	c->y = c->oldy = wa->y;
@@ -1046,6 +1123,7 @@ manage(Window w, XWindowAttributes *wa)
 	} else {
 		c->mon = selmon;
 		applyrules(c);
+		term = termforwin(c);
 	}
 
 	if (c->x + WIDTH(c) > c->mon->mx + c->mon->mw)
@@ -1082,6 +1160,8 @@ manage(Window w, XWindowAttributes *wa)
 	c->mon->sel = c;
 	arrange(c->mon);
 	XMapWindow(dpy, c->win);
+	if (term)
+		swallow(term, c);
 	focus(NULL);
 }
 
@@ -1392,7 +1472,9 @@ run(void)
 void
 scan(void)
 {
+	scanner = 1;
 	unsigned int i, num;
+	char swin[256];
 	Window d1, d2, *wins = NULL;
 	XWindowAttributes wa;
 
@@ -1403,6 +1485,8 @@ scan(void)
 				continue;
 			if (wa.map_state == IsViewable || getstate(wins[i]) == IconicState)
 				manage(wins[i], &wa);
+			else if (gettextprop(wins[i], netatom[NetClientList], swin, sizeof swin))
+				manage(wins[i], &wa);
 		}
 		for (i = 0; i < num; i++) { /* now the transients */
 			if (!XGetWindowAttributes(dpy, wins[i], &wa))
@@ -1414,6 +1498,7 @@ scan(void)
 		if (wins)
 			XFree(wins);
 	}
+	scanner = 0;
 }
 
 void
@@ -1777,6 +1862,20 @@ unmanage(Client *c, int destroyed)
 	Monitor *m = c->mon;
 	XWindowChanges wc;
 
+	if (c->swallowing) {
+		unswallow(c);
+		return;
+	}
+
+	Client *s = swallowingclient(c->win);
+	if (s) {
+		free(s->swallowing);
+		s->swallowing = NULL;
+		arrange(m);
+		focus(NULL);
+		return;
+	}
+
 	detach(c);
 	detachstack(c);
 	if (!destroyed) {
@@ -1791,9 +1890,12 @@ unmanage(Client *c, int destroyed)
 		XUngrabServer(dpy);
 	}
 	free(c);
-	focus(NULL);
-	updateclientlist();
-	arrange(m);
+
+	if (!s) {
+		arrange(m);
+		focus(NULL);
+		updateclientlist();
+	}
 }
 
 void
@@ -2058,6 +2160,110 @@ view(const Arg *arg)
 	arrange(selmon);
 }
 
+pid_t
+winpid(Window w)
+{
+	pid_t result = 0;
+
+	xcb_res_client_id_spec_t spec = {0};
+	spec.client = w;
+	spec.mask = XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID;
+
+	xcb_generic_error_t *e = NULL;
+	xcb_res_query_client_ids_cookie_t c = xcb_res_query_client_ids(xcon, 1, &spec);
+	xcb_res_query_client_ids_reply_t *r = xcb_res_query_client_ids_reply(xcon, c, &e);
+
+	if (!r)
+		return (pid_t)0;
+
+	xcb_res_client_id_value_iterator_t i = xcb_res_query_client_ids_ids_iterator(r);
+	for (; i.rem; xcb_res_client_id_value_next(&i)) {
+		spec = i.data->spec;
+		if (spec.mask & XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID) {
+			uint32_t *t = xcb_res_client_id_value_value(i.data);
+			result = *t;
+			break;
+		}
+	}
+
+	free(r);
+
+	if (result == (pid_t)-1)
+		result = 0;
+	return result;
+}
+
+pid_t
+getparentprocess(pid_t p)
+{
+	unsigned int v = 0;
+
+#if defined(__linux__)
+	FILE *f;
+	char buf[256];
+	snprintf(buf, sizeof(buf) - 1, "/proc/%u/stat", (unsigned)p);
+
+	if (!(f = fopen(buf, "r")))
+		return (pid_t)0;
+
+	if (fscanf(f, "%*u %*s %*c %u", (unsigned *)&v) != 1)
+		v = (pid_t)0;
+	fclose(f);
+#elif defined(__FreeBSD__)
+	struct kinfo_proc *proc = kinfo_getproc(p);
+	if (!proc)
+		return (pid_t)0;
+
+	v = proc->ki_ppid;
+	free(proc);
+#endif
+	return (pid_t)v;
+}
+
+int
+isdescprocess(pid_t p, pid_t c)
+{
+	while (p != c && c != 0)
+		c = getparentprocess(c);
+
+	return (int)c;
+}
+
+Client *
+termforwin(const Client *w)
+{
+	Client *c;
+	Monitor *m;
+
+	if (!w->pid || w->isterminal)
+		return NULL;
+
+	for (m = mons; m; m = m->next) {
+		for (c = m->clients; c; c = c->next) {
+			if (c->isterminal && !c->swallowing && c->pid && isdescprocess(c->pid, w->pid))
+				return c;
+		}
+	}
+
+	return NULL;
+}
+
+Client *
+swallowingclient(Window w)
+{
+	Client *c;
+	Monitor *m;
+
+	for (m = mons; m; m = m->next) {
+		for (c = m->clients; c; c = c->next) {
+			if (c->swallowing && c->swallowing->win == w)
+				return c;
+		}
+	}
+
+	return NULL;
+}
+
 Client *
 wintoclient(Window w)
 {
@@ -2186,6 +2392,8 @@ main(int argc, char *argv[])
 		fputs("warning: no locale support\n", stderr);
 	if (!(dpy = XOpenDisplay(NULL)))
 		die("dwm: cannot open display");
+	if (!(xcon = XGetXCBConnection(dpy)))
+		die("dwm: cannot get xcb connection\n");
 	checkotherwm();
 	setup();
 #ifdef __OpenBSD__
-- 
2.27.0


From 378df5e563aadbba0cc576e41b7c2a343a214688 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 03:30:05 +0100
Subject: [PATCH 05/19] Applied the fancybar patch.

---
 dwm.c | 46 ++++++++++++++++++++++++++++++++++++----------
 1 file changed, 36 insertions(+), 10 deletions(-)

diff --git a/dwm.c b/dwm.c
index b2bc65b..1883ebc 100644
--- a/dwm.c
+++ b/dwm.c
@@ -780,10 +780,10 @@ dirtomon(int dir)
 void
 drawbar(Monitor *m)
 {
-	int x, w, tw = 0;
+	int x, w, tw = 0, mw, ew = 0;
 	int boxs = drw->fonts->h / 9;
 	int boxw = drw->fonts->h / 6 + 2;
-	unsigned int i, occ = 0, urg = 0;
+	unsigned int i, occ = 0, urg = 0, n = 0;
 	Client *c;
 
 	/* draw status first so it can be overdrawn by tags later */
@@ -794,6 +794,8 @@ drawbar(Monitor *m)
 	}
 
 	for (c = m->clients; c; c = c->next) {
+		if (ISVISIBLE(c))
+			n++;
 		occ |= c->tags;
 		if (c->isurgent)
 			urg |= c->tags;
@@ -814,15 +816,39 @@ drawbar(Monitor *m)
 	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
 
 	if ((w = m->ww - tw - x) > bh) {
-		if (m->sel) {
-			drw_setscheme(drw, scheme[m == selmon ? SchemeSel : SchemeNorm]);
-			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
-			if (m->sel->isfloating)
-				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
-		} else {
-			drw_setscheme(drw, scheme[SchemeNorm]);
-			drw_rect(drw, x, 0, w, bh, 1, 1);
+		if (n > 0) {
+			tw = TEXTW(m->sel->name) + lrpad;
+			mw = (tw >= w || n == 1) ? 0 : (w - tw) / (n - 1);
+
+			i = 0;
+			for (c = m->clients; c; c = c->next) {
+				if (!ISVISIBLE(c) || c == m->sel)
+					continue;
+				tw = TEXTW(c->name);
+				if(tw < mw)
+					ew += (mw - tw);
+				else
+					i++;
+			}
+			if (i > 0)
+				mw += ew / i;
+
+			for (c = m->clients; c; c = c->next) {
+				if (!ISVISIBLE(c))
+					continue;
+				tw = MIN(m->sel == c ? w : mw, TEXTW(c->name));
+
+				drw_setscheme(drw, scheme[m->sel == c ? SchemeSel : SchemeNorm]);
+				if (tw > 0) /* trap special handling of 0 in drw_text */
+					drw_text(drw, x, 0, tw, bh, lrpad / 2, c->name, 0);
+				if (c->isfloating)
+					drw_rect(drw, x + boxs, boxs, boxw, boxw, c->isfixed, 0);
+				x += tw;
+				w -= tw;
+			}
 		}
+		drw_setscheme(drw, scheme[SchemeNorm]);
+		drw_rect(drw, x, 0, w, bh, 1, 1);
 	}
 	drw_map(drw, m->barwin, 0, 0, m->ww, bh);
 }
-- 
2.27.0


From efb3e563dc1d6355255b8a877c1a2ca6f36eeb1f Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 03:34:23 +0100
Subject: [PATCH 06/19] Applied the fibonacci patch.

---
 config.def.h | 11 ++++++---
 fibonacci.c  | 66 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 74 insertions(+), 3 deletions(-)
 create mode 100644 fibonacci.c

diff --git a/config.def.h b/config.def.h
index 1bfb609..1f5ff5d 100644
--- a/config.def.h
+++ b/config.def.h
@@ -48,11 +48,14 @@ static const float mfact     = 0.55; /* factor of master area size [0.05..0.95]
 static const int nmaster     = 1;    /* number of clients in master area */
 static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
 
+#include "fibonacci.c"
 static const Layout layouts[] = {
 	/* symbol     arrange function */
+	{ "[\\]",      dwindle },
 	{ "[]=",      tile },    /* first entry is default */
 	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
+	{ "[@]",      spiral },
 };
 
 /* key definitions */
@@ -85,9 +88,11 @@ static Key keys[] = {
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY|ShiftMask,             XK_r,      setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[3]} },
+	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[4]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
diff --git a/fibonacci.c b/fibonacci.c
new file mode 100644
index 0000000..fce0a57
--- /dev/null
+++ b/fibonacci.c
@@ -0,0 +1,66 @@
+void
+fibonacci(Monitor *mon, int s) {
+	unsigned int i, n, nx, ny, nw, nh;
+	Client *c;
+
+	for(n = 0, c = nexttiled(mon->clients); c; c = nexttiled(c->next), n++);
+	if(n == 0)
+		return;
+	
+	nx = mon->wx;
+	ny = 0;
+	nw = mon->ww;
+	nh = mon->wh;
+	
+	for(i = 0, c = nexttiled(mon->clients); c; c = nexttiled(c->next)) {
+		if((i % 2 && nh / 2 > 2 * c->bw)
+		   || (!(i % 2) && nw / 2 > 2 * c->bw)) {
+			if(i < n - 1) {
+				if(i % 2)
+					nh /= 2;
+				else
+					nw /= 2;
+				if((i % 4) == 2 && !s)
+					nx += nw;
+				else if((i % 4) == 3 && !s)
+					ny += nh;
+			}
+			if((i % 4) == 0) {
+				if(s)
+					ny += nh;
+				else
+					ny -= nh;
+			}
+			else if((i % 4) == 1)
+				nx += nw;
+			else if((i % 4) == 2)
+				ny += nh;
+			else if((i % 4) == 3) {
+				if(s)
+					nx += nw;
+				else
+					nx -= nw;
+			}
+			if(i == 0)
+			{
+				if(n != 1)
+					nw = mon->ww * mon->mfact;
+				ny = mon->wy;
+			}
+			else if(i == 1)
+				nw = mon->ww - nw;
+			i++;
+		}
+		resize(c, nx, ny, nw - 2 * c->bw, nh - 2 * c->bw, False);
+	}
+}
+
+void
+dwindle(Monitor *mon) {
+	fibonacci(mon, 1);
+}
+
+void
+spiral(Monitor *mon) {
+	fibonacci(mon, 0);
+}
-- 
2.27.0


From 33a855330caa140f057ba955a1f0a01ae2c85dc5 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 03:43:48 +0100
Subject: [PATCH 07/19] Applied the float rules patch.

---
 config.def.h | 14 +++++++-------
 dwm.c        | 15 ++++++++++++++-
 2 files changed, 21 insertions(+), 8 deletions(-)

diff --git a/config.def.h b/config.def.h
index 1f5ff5d..af78a0b 100644
--- a/config.def.h
+++ b/config.def.h
@@ -34,13 +34,13 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor */
-	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1 },
-	{ "discord",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1 },
-	{ "Thunderbird", NULL,     NULL,           1 << 3,    0,          0,          -1,        -1 },
-	{ "Unity",       NULL,     NULL,           1 << 4,    0,          0,          -1,        -1 },
-	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1 },
-	{ NULL,          NULL,     "Event Tester", 0,         1,          0,           1,        -1 }, /* xev */
+	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor float x,y,w,h  floatborderpx */
+	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 5 },
+	{ "discord",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 5 },
+	{ "Thunderbird", NULL,     NULL,           1 << 3,    0,          0,          -1,        -1,     50,50,500,500, 5 },
+	{ "Unity",       NULL,     NULL,           1 << 4,    0,          0,          -1,        -1,     50,50,500,500, 5 },
+	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1,     50,50,500,500, 5 },
+	{ NULL,          NULL,     "Event Tester", 0,         1,          0,           1,        -1,     50,50,500,500, 5 }, /* xev */
 };
 
 /* layout(s) */
diff --git a/dwm.c b/dwm.c
index 1883ebc..70fe6e0 100644
--- a/dwm.c
+++ b/dwm.c
@@ -97,6 +97,7 @@ struct Client {
 	int bw, oldbw;
 	unsigned int tags;
 	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;
+	int floatborderpx;
 	pid_t pid;
 	Client *next;
 	Client *snext;
@@ -147,6 +148,8 @@ typedef struct {
 	int isterminal;
 	int noswallow;
 	int monitor;
+	int floatx, floaty, floatw, floath;
+	int floatborderpx;
 } Rule;
 
 /* function declarations */
@@ -326,6 +329,13 @@ applyrules(Client *c)
 			c->noswallow  = r->noswallow;
 			c->isfloating = r->isfloating;
 			c->tags |= r->tags;
+			c->floatborderpx = r->floatborderpx;
+			if (r->isfloating) {
+				c->x = r->floatx;
+				c->y = r->floaty;
+				c->w = r->floatw;
+				c->h = r->floath;
+			}
 			for (m = mons; m && m->num != r->monitor; m = m->next);
 			if (m)
 				c->mon = m;
@@ -1396,7 +1406,10 @@ resizeclient(Client *c, int x, int y, int w, int h)
 	c->oldy = c->y; c->y = wc.y = y;
 	c->oldw = c->w; c->w = wc.width = w;
 	c->oldh = c->h; c->h = wc.height = h;
-	wc.border_width = c->bw;
+	if (c->isfloating)
+		wc.border_width = c->floatborderpx;
+	else
+		wc.border_width = c->bw;
 	XConfigureWindow(dpy, c->win, CWX|CWY|CWWidth|CWHeight|CWBorderWidth, &wc);
 	configure(c);
 	XSync(dpy, False);
-- 
2.27.0


From c9754fc82bb3713144d4bb0dd0b7406979cc2a0b Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 04:03:50 +0100
Subject: [PATCH 08/19] Applied the vanity gaps patch.

---
 config.def.h |  23 +++++++-
 dwm.c        | 154 +++++++++++++++++++++++++++++++++++++++++++++++----
 2 files changed, 164 insertions(+), 13 deletions(-)

diff --git a/config.def.h b/config.def.h
index af78a0b..be09ca2 100644
--- a/config.def.h
+++ b/config.def.h
@@ -4,6 +4,11 @@
 static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
+static const unsigned int gappih    = 10;       /* horiz inner gap between windows */
+static const unsigned int gappiv    = 10;       /* vert inner gap between windows */
+static const unsigned int gappoh    = 10;       /* horiz outer gap between windows and screen edge */
+static const unsigned int gappov    = 10;       /* vert outer gap between windows and screen edge */
+static const int smartgaps          = 0;        /* 1 means no outer gap when there is only one window */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "Gohu GohuFont:size=8" };
@@ -46,7 +51,7 @@ static const Rule rules[] = {
 /* layout(s) */
 static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 
 #include "fibonacci.c"
 static const Layout layouts[] = {
@@ -85,6 +90,22 @@ static Key keys[] = {
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY|Mod4Mask,              XK_h,      incrgaps,       {.i = +1 } },
+	{ MODKEY|Mod4Mask,              XK_l,      incrgaps,       {.i = -1 } },
+	{ MODKEY|Mod4Mask|ShiftMask,    XK_h,      incrogaps,      {.i = +1 } },
+	{ MODKEY|Mod4Mask|ShiftMask,    XK_l,      incrogaps,      {.i = -1 } },
+	{ MODKEY|Mod4Mask|ControlMask,  XK_h,      incrigaps,      {.i = +1 } },
+	{ MODKEY|Mod4Mask|ControlMask,  XK_l,      incrigaps,      {.i = -1 } },
+	{ MODKEY|Mod4Mask,              XK_0,      togglegaps,     {0} },
+	{ MODKEY|Mod4Mask|ShiftMask,    XK_0,      defaultgaps,    {0} },
+	{ MODKEY,                       XK_y,      incrihgaps,     {.i = +1 } },
+	{ MODKEY,                       XK_o,      incrihgaps,     {.i = -1 } },
+	{ MODKEY|ControlMask,           XK_y,      incrivgaps,     {.i = +1 } },
+	{ MODKEY|ControlMask,           XK_o,      incrivgaps,     {.i = -1 } },
+	{ MODKEY|Mod4Mask,              XK_y,      incrohgaps,     {.i = +1 } },
+	{ MODKEY|Mod4Mask,              XK_o,      incrohgaps,     {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_y,      incrovgaps,     {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_o,      incrovgaps,     {.i = -1 } },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
diff --git a/dwm.c b/dwm.c
index 70fe6e0..98f2c22 100644
--- a/dwm.c
+++ b/dwm.c
@@ -126,6 +126,10 @@ struct Monitor {
 	int by;               /* bar geometry */
 	int mx, my, mw, mh;   /* screen size */
 	int wx, wy, ww, wh;   /* window area  */
+	int gappih;           /* horizontal gap between windows */
+	int gappiv;           /* vertical gap between windows */
+	int gappoh;           /* horizontal outer gaps */
+	int gappov;           /* vertical outer gaps */
 	unsigned int seltags;
 	unsigned int sellt;
 	unsigned int tagset[2];
@@ -211,6 +215,16 @@ static void sendmon(Client *c, Monitor *m);
 static void setclientstate(Client *c, long state);
 static void setfocus(Client *c);
 static void setfullscreen(Client *c, int fullscreen);
+static void setgaps(int oh, int ov, int ih, int iv);
+static void incrgaps(const Arg *arg);
+static void incrigaps(const Arg *arg);
+static void incrogaps(const Arg *arg);
+static void incrohgaps(const Arg *arg);
+static void incrovgaps(const Arg *arg);
+static void incrihgaps(const Arg *arg);
+static void incrivgaps(const Arg *arg);
+static void togglegaps(const Arg *arg);
+static void defaultgaps(const Arg *arg);
 static void setlayout(const Arg *arg);
 static void setmfact(const Arg *arg);
 static void setup(void);
@@ -260,6 +274,7 @@ static int scanner;
 static int screen;
 static int sw, sh;           /* X display screen geometry width, height */
 static int bh, blw = 0;      /* bar geometry */
+static int enablegaps = 1;   /* enables gaps, used by togglegaps */
 static int lrpad;            /* sum of left and right padding for text */
 static int (*xerrorxlib)(Display *, XErrorEvent *);
 static unsigned int numlockmask = 0;
@@ -730,6 +745,10 @@ createmon(void)
 	m->nmaster = nmaster;
 	m->showbar = showbar;
 	m->topbar = topbar;
+	m->gappih = gappih;
+	m->gappiv = gappiv;
+	m->gappoh = gappoh;
+	m->gappov = gappov;
 	m->lt[0] = &layouts[0];
 	m->lt[1] = &layouts[1 % LENGTH(layouts)];
 	strncpy(m->ltsymbol, layouts[0].symbol, sizeof m->ltsymbol);
@@ -1630,6 +1649,111 @@ setfullscreen(Client *c, int fullscreen)
 	}
 }
 
+void
+setgaps(int oh, int ov, int ih, int iv)
+{
+	if (oh < 0) oh = 0;
+	if (ov < 0) ov = 0;
+	if (ih < 0) ih = 0;
+	if (iv < 0) iv = 0;
+
+	selmon->gappoh = oh;
+	selmon->gappov = ov;
+	selmon->gappih = ih;
+	selmon->gappiv = iv;
+	arrange(selmon);
+}
+
+void
+togglegaps(const Arg *arg)
+{
+	enablegaps = !enablegaps;
+	arrange(selmon);
+}
+
+void
+defaultgaps(const Arg *arg)
+{
+	setgaps(gappoh, gappov, gappih, gappiv);
+}
+
+void
+incrgaps(const Arg *arg)
+{
+	setgaps(
+		selmon->gappoh + arg->i,
+		selmon->gappov + arg->i,
+		selmon->gappih + arg->i,
+		selmon->gappiv + arg->i
+	);
+}
+
+void
+incrigaps(const Arg *arg)
+{
+	setgaps(
+		selmon->gappoh,
+		selmon->gappov,
+		selmon->gappih + arg->i,
+		selmon->gappiv + arg->i
+	);
+}
+
+void
+incrogaps(const Arg *arg)
+{
+	setgaps(
+		selmon->gappoh + arg->i,
+		selmon->gappov + arg->i,
+		selmon->gappih,
+		selmon->gappiv
+	);
+}
+
+void
+incrohgaps(const Arg *arg)
+{
+	setgaps(
+		selmon->gappoh + arg->i,
+		selmon->gappov,
+		selmon->gappih,
+		selmon->gappiv
+	);
+}
+
+void
+incrovgaps(const Arg *arg)
+{
+	setgaps(
+		selmon->gappoh,
+		selmon->gappov + arg->i,
+		selmon->gappih,
+		selmon->gappiv
+	);
+}
+
+void
+incrihgaps(const Arg *arg)
+{
+	setgaps(
+		selmon->gappoh,
+		selmon->gappov,
+		selmon->gappih + arg->i,
+		selmon->gappiv
+	);
+}
+
+void
+incrivgaps(const Arg *arg)
+{
+	setgaps(
+		selmon->gappoh,
+		selmon->gappov,
+		selmon->gappih,
+		selmon->gappiv + arg->i
+	);
+}
+
 void
 setlayout(const Arg *arg)
 {
@@ -1807,28 +1931,34 @@ tagmon(const Arg *arg)
 void
 tile(Monitor *m)
 {
-	unsigned int i, n, h, mw, my, ty;
+	unsigned int i, n, h, r, oe = enablegaps, ie = enablegaps, mw, my, ty;
 	Client *c;
 
 	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
 	if (n == 0)
 		return;
 
+	if (smartgaps == n) {
+		oe = 0; // outer gaps disabled
+	}
+
 	if (n > m->nmaster)
-		mw = m->nmaster ? m->ww * m->mfact : 0;
+		mw = m->nmaster ? (m->ww + m->gappiv*ie) * m->mfact : 0;
 	else
-		mw = m->ww;
-	for (i = my = ty = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
+		mw = m->ww - 2*m->gappov*oe + m->gappiv*ie;
+	for (i = 0, my = ty = m->gappoh*oe, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
 		if (i < m->nmaster) {
-			h = (m->wh - my) / (MIN(n, m->nmaster) - i);
-			resize(c, m->wx, m->wy + my, mw - (2*c->bw), h - (2*c->bw), 0);
-			if (my + HEIGHT(c) < m->wh)
-				my += HEIGHT(c);
+			r = MIN(n, m->nmaster) - i;
+			h = (m->wh - my - m->gappoh*oe - m->gappih*ie * (r - 1)) / r;
+			resize(c, m->wx + m->gappov*oe, m->wy + my, mw - (2*c->bw) - m->gappiv*ie, h - (2*c->bw), 0);
+			if (my + HEIGHT(c) + m->gappih*ie < m->wh)
+			my += HEIGHT(c) + m->gappih*ie;
 		} else {
-			h = (m->wh - ty) / (n - i);
-			resize(c, m->wx + mw, m->wy + ty, m->ww - mw - (2*c->bw), h - (2*c->bw), 0);
-			if (ty + HEIGHT(c) < m->wh)
-				ty += HEIGHT(c);
+			r = n - i;
+			h = (m->wh - ty - m->gappoh*oe - m->gappih*ie * (r - 1)) / r;
+			resize(c, m->wx + mw + m->gappov*oe, m->wy + ty, m->ww - mw - (2*c->bw) - 2*m->gappov*oe, h - (2*c->bw), 0);
+			if (ty + HEIGHT(c) + m->gappih*ie < m->wh)
+				ty += HEIGHT(c) + m->gappih*ie;
 		}
 }
 
-- 
2.27.0


From 5d0a193658ddda4a7f40a526448c7331a7525d06 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 04:16:32 +0100
Subject: [PATCH 09/19] Applied the ru fibonacci patch.

---
 fibonacci.c | 92 +++++++++++++++++++++++++++++------------------------
 1 file changed, 50 insertions(+), 42 deletions(-)

diff --git a/fibonacci.c b/fibonacci.c
index fce0a57..8c29daa 100644
--- a/fibonacci.c
+++ b/fibonacci.c
@@ -1,57 +1,65 @@
-void
-fibonacci(Monitor *mon, int s) {
-	unsigned int i, n, nx, ny, nw, nh;
+static void
+fibonacci(Monitor *m, int s)
+{
+	unsigned int i, n;
+	int nx, ny, nw, nh;
 	Client *c;
 
-	for(n = 0, c = nexttiled(mon->clients); c; c = nexttiled(c->next), n++);
-	if(n == 0)
+	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+	if (n == 0)
+		return;
+	if (n == 1) {
+		c = nexttiled(m->clients);
+		resize(c, m->wx, m->wy, m->ww - 2 * c->bw, m->wh - 2 * c->bw, 0);
 		return;
-	
-	nx = mon->wx;
-	ny = 0;
-	nw = mon->ww;
-	nh = mon->wh;
-	
-	for(i = 0, c = nexttiled(mon->clients); c; c = nexttiled(c->next)) {
-		if((i % 2 && nh / 2 > 2 * c->bw)
-		   || (!(i % 2) && nw / 2 > 2 * c->bw)) {
-			if(i < n - 1) {
-				if(i % 2)
-					nh /= 2;
+	}
+
+	nx = m->wx + m->gappih;
+	ny = m->gappiv;
+	nw = m->ww - 2*m->gappih;
+	nh = m->wh - 2*m->gappiv;
+
+	for (i = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next)) {
+		if ((i % 2 && nh / 2 > 2*c->bw)
+		   || (!(i % 2) && nw / 2 > 2*c->bw)) {
+			if (i < n - 1) {
+				if (i % 2)
+					nh = (nh - m->gappiv) / 2;
 				else
-					nw /= 2;
-				if((i % 4) == 2 && !s)
-					nx += nw;
-				else if((i % 4) == 3 && !s)
-					ny += nh;
+					nw = (nw - m->gappih) / 2;
+
+				if ((i % 4) == 2 && !s)
+					nx += nw + m->gappih;
+				else if ((i % 4) == 3 && !s)
+					ny += nh + m->gappiv;
 			}
-			if((i % 4) == 0) {
-				if(s)
-					ny += nh;
+			if ((i % 4) == 0) {
+				if (s)
+					ny += nh + m->gappiv;
 				else
-					ny -= nh;
+					ny -= nh + m->gappiv;
 			}
-			else if((i % 4) == 1)
-				nx += nw;
-			else if((i % 4) == 2)
-				ny += nh;
-			else if((i % 4) == 3) {
-				if(s)
-					nx += nw;
+			else if ((i % 4) == 1)
+				nx += nw + m->gappih;
+			else if ((i % 4) == 2)
+				ny += nh + m->gappiv;
+			else if ((i % 4) == 3) {
+				if (s)
+					nx += nw + m->gappih;
 				else
-					nx -= nw;
+					nx -= nw + m->gappih;
 			}
-			if(i == 0)
-			{
-				if(n != 1)
-					nw = mon->ww * mon->mfact;
-				ny = mon->wy;
+			if (i == 0)	{
+				if (n != 1)
+					nw = (m->ww - 2*m->gappih - m->gappih) * m->mfact;
+				ny = m->wy + m->gappiv;
 			}
-			else if(i == 1)
-				nw = mon->ww - nw;
+			else if (i == 1)
+				nw = m->ww - nw - m->gappih - 2*m->gappih;
 			i++;
 		}
-		resize(c, nx, ny, nw - 2 * c->bw, nh - 2 * c->bw, False);
+
+		resize(c, nx, ny, nw - (2*c->bw), nh - (2*c->bw), False);
 	}
 }
 
-- 
2.27.0


From e4a6a0c1104737fee0085a1d96316ef7a8494cd3 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 13:51:12 +0100
Subject: [PATCH 10/19] Changed the default gap sizes.

---
 config.def.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/config.def.h b/config.def.h
index be09ca2..9d8b50f 100644
--- a/config.def.h
+++ b/config.def.h
@@ -4,10 +4,10 @@
 static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
-static const unsigned int gappih    = 10;       /* horiz inner gap between windows */
-static const unsigned int gappiv    = 10;       /* vert inner gap between windows */
-static const unsigned int gappoh    = 10;       /* horiz outer gap between windows and screen edge */
-static const unsigned int gappov    = 10;       /* vert outer gap between windows and screen edge */
+static const unsigned int gappih    = 4;       /* horiz inner gap between windows */
+static const unsigned int gappiv    = 4;       /* vert inner gap between windows */
+static const unsigned int gappoh    = 4;       /* horiz outer gap between windows and screen edge */
+static const unsigned int gappov    = 4;       /* vert outer gap between windows and screen edge */
 static const int smartgaps          = 0;        /* 1 means no outer gap when there is only one window */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
@@ -40,7 +40,7 @@ static const Rule rules[] = {
 	 *	WM_NAME(STRING) = title
 	 */
 	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor float x,y,w,h  floatborderpx */
-	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 5 },
+	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 0 },
 	{ "discord",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 5 },
 	{ "Thunderbird", NULL,     NULL,           1 << 3,    0,          0,          -1,        -1,     50,50,500,500, 5 },
 	{ "Unity",       NULL,     NULL,           1 << 4,    0,          0,          -1,        -1,     50,50,500,500, 5 },
-- 
2.27.0


From 874054fdb426c698c3cd138d2a9e32bdc1da6514 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 13:57:04 +0100
Subject: [PATCH 11/19] Added a colour palette.

---
 config.def.h | 6 +-----
 palette.c    | 5 +++++
 2 files changed, 6 insertions(+), 5 deletions(-)
 create mode 100644 palette.c

diff --git a/config.def.h b/config.def.h
index 9d8b50f..1356ab7 100644
--- a/config.def.h
+++ b/config.def.h
@@ -13,11 +13,7 @@ static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "Gohu GohuFont:size=8" };
 static const char dmenufont[]       = "Gohu GohuFont:size=8";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+#include "palette.c"
 static const unsigned int baralpha = 255 * 0.9;
 static const unsigned int borderalpha = 255 * 0.9;
 static const char *colors[][3]      = {
diff --git a/palette.c b/palette.c
new file mode 100644
index 0000000..38ee3da
--- /dev/null
+++ b/palette.c
@@ -0,0 +1,5 @@
+static const char col_gray1[] = "#000000";
+static const char col_gray2[] = "#5f574f";
+static const char col_gray3[] = "#c2c3c7";
+static const char col_gray4[] = "#fff1e8";
+static const char col_cyan[]  = "#ff77a8";
-- 
2.27.0


From 4408e94f4334fb336e48c915f4274467825d4464 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Fri, 12 Jun 2020 15:29:45 +0100
Subject: [PATCH 12/19] Changed alpha values.

---
 config.def.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/config.def.h b/config.def.h
index 1356ab7..8118f8c 100644
--- a/config.def.h
+++ b/config.def.h
@@ -14,8 +14,8 @@ static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "Gohu GohuFont:size=8" };
 static const char dmenufont[]       = "Gohu GohuFont:size=8";
 #include "palette.c"
-static const unsigned int baralpha = 255 * 0.9;
-static const unsigned int borderalpha = 255 * 0.9;
+static const unsigned int baralpha = 255 * 0.8;
+static const unsigned int borderalpha = 255 * 0.8;
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-- 
2.27.0


From ec9c7c0e9ed54a994bf82f6b2e3cb42bfe2410d0 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Tue, 16 Jun 2020 20:29:31 +0100
Subject: [PATCH 13/19] Added media keys

---
 config.def.h | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/config.def.h b/config.def.h
index 8118f8c..952c083 100644
--- a/config.def.h
+++ b/config.def.h
@@ -36,12 +36,12 @@ static const Rule rules[] = {
 	 *	WM_NAME(STRING) = title
 	 */
 	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor float x,y,w,h  floatborderpx */
-	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 0 },
-	{ "discord",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 5 },
-	{ "Thunderbird", NULL,     NULL,           1 << 3,    0,          0,          -1,        -1,     50,50,500,500, 5 },
-	{ "Unity",       NULL,     NULL,           1 << 4,    0,          0,          -1,        -1,     50,50,500,500, 5 },
-	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1,     50,50,500,500, 5 },
-	{ NULL,          NULL,     "Event Tester", 0,         1,          0,           1,        -1,     50,50,500,500, 5 }, /* xev */
+	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 1 },
+	{ "discord",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "Thunderbird", NULL,     NULL,           1 << 3,    0,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "Unity",       NULL,     NULL,           1 << 4,    0,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1,     50,50,500,500, 4 },
+	{ NULL,          NULL,     "Event Tester", 0,         1,          0,           1,        -1,     50,50,500,500, 4 }, /* xev */
 };
 
 /* layout(s) */
@@ -74,7 +74,12 @@ static const Layout layouts[] = {
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
+static const char *mutecmd[]  = { "pactl", "set-sink-mute", "0", "toggle", NULL };
+static const char *volupcmd[]  = { "pactl", "set-sink-volume", "0", "+10%", NULL };
+static const char *voldowncmd[]  = { "pactl", "set-sink-volume", "0", "-10%", NULL };
+static const char *printscreencmd[]  = { "flameshot", "full", "-c", NULL };
 
+#include <X11/XF86keysym.h>
 static Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
@@ -128,6 +133,10 @@ static Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ 0,							XF86XK_AudioMute,			spawn,	{.v = mutecmd } },
+	{ 0,							XF86XK_AudioRaiseVolume,	spawn,	{.v = volupcmd } },
+	{ 0,							XF86XK_AudioLowerVolume,	spawn,	{.v = voldowncmd } },
+	{ 0,							XK_Print,					spawn,	{.v = printscreencmd } },
 };
 
 /* button definitions */
-- 
2.27.0


From 90d5280931167b873401f408469f7b3741fe7357 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Tue, 16 Jun 2020 20:46:20 +0100
Subject: [PATCH 14/19] Applied the alttagsdecoration patch.

---
 config.def.h | 11 ++++++-----
 dwm.c        | 22 ++++++++++++----------
 2 files changed, 18 insertions(+), 15 deletions(-)

diff --git a/config.def.h b/config.def.h
index 952c083..ba1b412 100644
--- a/config.def.h
+++ b/config.def.h
@@ -28,7 +28,8 @@ static const unsigned int alphas[][3]      = {
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "01", "02", "03", "04", "05", "06", "07", "08", "09" };
+static const char *alttags[] = { "MISC", "DEV", "WEB", "DOCS", "NOTES", "MEDIA", "MUSIC", "TALK", "MAIL" };
 
 static const Rule rules[] = {
 	/* xprop(1):
@@ -36,10 +37,10 @@ static const Rule rules[] = {
 	 *	WM_NAME(STRING) = title
 	 */
 	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor float x,y,w,h  floatborderpx */
-	{ "firefox",     NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 1 },
-	{ "discord",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 4 },
-	{ "Thunderbird", NULL,     NULL,           1 << 3,    0,          0,          -1,        -1,     50,50,500,500, 4 },
-	{ "Unity",       NULL,     NULL,           1 << 4,    0,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "Unity",       NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "firefox",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 1 },
+	{ "discord",     NULL,     NULL,           1 << 7,    0,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "Thunderbird", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1,     50,50,500,500, 4 },
 	{ NULL,          NULL,     "Event Tester", 0,         1,          0,           1,        -1,     50,50,500,500, 4 }, /* xev */
 };
diff --git a/dwm.c b/dwm.c
index 98f2c22..7f7473f 100644
--- a/dwm.c
+++ b/dwm.c
@@ -523,7 +523,7 @@ unswallow(Client *c)
 void
 buttonpress(XEvent *e)
 {
-	unsigned int i, x, click;
+	unsigned int i, x, click, occ;
 	Arg arg = {0};
 	Client *c;
 	Monitor *m;
@@ -537,9 +537,13 @@ buttonpress(XEvent *e)
 		focus(NULL);
 	}
 	if (ev->window == selmon->barwin) {
-		i = x = 0;
+		i = x = occ = 0;
+		/* Bitmask of occupied tags */
+		for (c = m->clients; c; c = c->next)
+			occ |= c->tags;
+
 		do
-			x += TEXTW(tags[i]);
+			x += TEXTW(occ & 1 << i ? alttags[i] : tags[i]);
 		while (ev->x >= x && ++i < LENGTH(tags));
 		if (i < LENGTH(tags)) {
 			click = ClkTagBar;
@@ -813,6 +817,7 @@ drawbar(Monitor *m)
 	int boxs = drw->fonts->h / 9;
 	int boxw = drw->fonts->h / 6 + 2;
 	unsigned int i, occ = 0, urg = 0, n = 0;
+	const char *tagtext;
 	Client *c;
 
 	/* draw status first so it can be overdrawn by tags later */
@@ -831,13 +836,10 @@ drawbar(Monitor *m)
 	}
 	x = 0;
 	for (i = 0; i < LENGTH(tags); i++) {
-		w = TEXTW(tags[i]);
-		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
-		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
-		if (occ & 1 << i)
-			drw_rect(drw, x + boxs, boxs, boxw, boxw,
-				m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
-				urg & 1 << i);
+		tagtext = occ & 1 << i ? alttags[i] : tags[i];
+		w = TEXTW(tagtext);
+ 		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
+		drw_text(drw, x, 0, w, bh, lrpad / 2, tagtext, urg & 1 << i);
 		x += w;
 	}
 	w = blw = TEXTW(m->ltsymbol);
-- 
2.27.0


From 62c2182019146b512efa0002b173166d00c4d36c Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Wed, 17 Jun 2020 18:05:50 +0100
Subject: [PATCH 15/19] Made dwm opaque.

---
 config.def.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/config.def.h b/config.def.h
index ba1b412..676be51 100644
--- a/config.def.h
+++ b/config.def.h
@@ -14,8 +14,8 @@ static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "Gohu GohuFont:size=8" };
 static const char dmenufont[]       = "Gohu GohuFont:size=8";
 #include "palette.c"
-static const unsigned int baralpha = 255 * 0.8;
-static const unsigned int borderalpha = 255 * 0.8;
+static const unsigned int baralpha = 255;
+static const unsigned int borderalpha = 255;
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-- 
2.27.0


From e1a29151c2052badc321cabee9877fcfec131e79 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Wed, 17 Jun 2020 18:10:44 +0100
Subject: [PATCH 16/19] Applied the actualfullscreen patch.

---
 config.def.h | 1 +
 dwm.c        | 8 ++++++++
 2 files changed, 9 insertions(+)

diff --git a/config.def.h b/config.def.h
index 676be51..db4c843 100644
--- a/config.def.h
+++ b/config.def.h
@@ -118,6 +118,7 @@ static Key keys[] = {
 	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[4]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
+	{ MODKEY|ShiftMask,             XK_f,      togglefullscr,  {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
 	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
 	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
diff --git a/dwm.c b/dwm.c
index 7f7473f..45edd36 100644
--- a/dwm.c
+++ b/dwm.c
@@ -237,6 +237,7 @@ static void tagmon(const Arg *arg);
 static void tile(Monitor *);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
+static void togglefullscr(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
 static void unfocus(Client *c, int setfocus);
@@ -1987,6 +1988,13 @@ togglefloating(const Arg *arg)
 	arrange(selmon);
 }
 
+void
+togglefullscr(const Arg *arg)
+{
+  if(selmon->sel)
+    setfullscreen(selmon->sel, !selmon->sel->isfullscreen);
+}
+
 void
 toggletag(const Arg *arg)
 {
-- 
2.27.0


From c15402cb4735695092dc93d516ce4390fcae0c93 Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Wed, 17 Jun 2020 18:17:25 +0100
Subject: [PATCH 17/19] Applied the noborder patch.

---
 config.def.h |  7 +++----
 dwm.c        | 11 +++++++++++
 2 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/config.def.h b/config.def.h
index db4c843..d9695ff 100644
--- a/config.def.h
+++ b/config.def.h
@@ -38,7 +38,7 @@ static const Rule rules[] = {
 	 */
 	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor float x,y,w,h  floatborderpx */
 	{ "Unity",       NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 4 },
-	{ "firefox",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 1 },
+	{ "firefox",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "discord",     NULL,     NULL,           1 << 7,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "Thunderbird", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1,     50,50,500,500, 4 },
@@ -46,7 +46,7 @@ static const Rule rules[] = {
 };
 
 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact     = 0.5; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
 static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 
@@ -113,12 +113,11 @@ static Key keys[] = {
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
 	{ MODKEY|ShiftMask,             XK_r,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[2]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[3]} },
 	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[4]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY|ShiftMask,             XK_f,      togglefullscr,  {0} },
+	{ MODKEY,             XK_f,      togglefullscr,  {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
 	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
 	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
diff --git a/dwm.c b/dwm.c
index 45edd36..0d28a55 100644
--- a/dwm.c
+++ b/dwm.c
@@ -1432,6 +1432,17 @@ resizeclient(Client *c, int x, int y, int w, int h)
 		wc.border_width = c->floatborderpx;
 	else
 		wc.border_width = c->bw;
+	c->oldw = c->w; c->w = wc.width = w;
+	c->oldh = c->h; c->h = wc.height = h;
+	wc.border_width = c->bw;
+	if (((nexttiled(c->mon->clients) == c && !nexttiled(c->next))
+	    || &monocle == c->mon->lt[c->mon->sellt]->arrange)
+	    && !c->isfullscreen && !c->isfloating
+	    && NULL != c->mon->lt[c->mon->sellt]->arrange) {
+		c->w = wc.width += c->bw * 2;
+		c->h = wc.height += c->bw * 2;
+		wc.border_width = 0;
+	}
 	XConfigureWindow(dpy, c->win, CWX|CWY|CWWidth|CWHeight|CWBorderWidth, &wc);
 	configure(c);
 	XSync(dpy, False);
-- 
2.27.0


From dd16fb1b3ed1a5570648b568f77d95fe9a2a09ef Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Thu, 18 Jun 2020 01:08:31 +0100
Subject: [PATCH 18/19] Added Siji font, Added a lot of personal tweaks and
 binds.

---
 config.def.h | 34 +++++++++++++++++++---------------
 1 file changed, 19 insertions(+), 15 deletions(-)

diff --git a/config.def.h b/config.def.h
index d9695ff..b240a7b 100644
--- a/config.def.h
+++ b/config.def.h
@@ -11,11 +11,14 @@ static const unsigned int gappov    = 4;       /* vert outer gap between windows
 static const int smartgaps          = 0;        /* 1 means no outer gap when there is only one window */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "Gohu GohuFont:size=8" };
+static const char *fonts[]          = {
+	"Siji:size=8",
+	"Gohu GohuFont:size=8"
+};
 static const char dmenufont[]       = "Gohu GohuFont:size=8";
 #include "palette.c"
-static const unsigned int baralpha = 255;
-static const unsigned int borderalpha = 255;
+static const unsigned int baralpha = 255 * 0.8;
+static const unsigned int borderalpha = 255 * 0.8;
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
@@ -37,12 +40,14 @@ static const Rule rules[] = {
 	 *	WM_NAME(STRING) = title
 	 */
 	/* class         instance  title           tags mask  isfloating  isterminal  noswallow  monitor float x,y,w,h  floatborderpx */
-	{ "Unity",       NULL,     NULL,           1 << 1,    0,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "Unity",       NULL,     NULL,           1 << 1,    1,          0,          -1,        -1,     50,50,500,500, 4 },
+	{ "unityhub",    NULL,     NULL,           1 << 1,    1,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "firefox",     NULL,     NULL,           1 << 2,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "discord",     NULL,     NULL,           1 << 7,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "Thunderbird", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 	{ "st",          NULL,     NULL,           0,         0,          1,          -1,        -1,     50,50,500,500, 4 },
 	{ NULL,          NULL,     "Event Tester", 0,         1,          0,           1,        -1,     50,50,500,500, 4 }, /* xev */
+	{ NULL,          NULL,     "ncmpcpp",      1 << 6,    0,          0,          -1,        -1,     50,50,500,500, 4 },
 };
 
 /* layout(s) */
@@ -75,10 +80,6 @@ static const Layout layouts[] = {
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
-static const char *mutecmd[]  = { "pactl", "set-sink-mute", "0", "toggle", NULL };
-static const char *volupcmd[]  = { "pactl", "set-sink-volume", "0", "+10%", NULL };
-static const char *voldowncmd[]  = { "pactl", "set-sink-volume", "0", "-10%", NULL };
-static const char *printscreencmd[]  = { "flameshot", "full", "-c", NULL };
 
 #include <X11/XF86keysym.h>
 static Key keys[] = {
@@ -111,13 +112,14 @@ static Key keys[] = {
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY|ShiftMask,             XK_r,      setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY|ShiftMask,             XK_f,      setlayout,      {.v = &layouts[2]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[3]} },
-	{ MODKEY,                       XK_r,      setlayout,      {.v = &layouts[4]} },
+	{ MODKEY|ShiftMask,             XK_r,      setlayout,      {.v = &layouts[4]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,             XK_f,      togglefullscr,  {0} },
+	{ MODKEY,                       XK_f,      togglefullscr,  {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
 	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
 	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
@@ -134,10 +136,12 @@ static Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
-	{ 0,							XF86XK_AudioMute,			spawn,	{.v = mutecmd } },
-	{ 0,							XF86XK_AudioRaiseVolume,	spawn,	{.v = volupcmd } },
-	{ 0,							XF86XK_AudioLowerVolume,	spawn,	{.v = voldowncmd } },
-	{ 0,							XK_Print,					spawn,	{.v = printscreencmd } },
+	{ 0,							XF86XK_AudioMute,			spawn,	SHCMD("pactl set-sink-mute 0 toggle") },
+	{ 0,							XF86XK_AudioRaiseVolume,	spawn,	SHCMD("pactl set-sink-volume 0 +10%") },
+	{ 0,							XF86XK_AudioLowerVolume,	spawn,	SHCMD("pactl set-sink-volume 0 -10%") },
+	{ 0,							XF86XK_MonBrightnessUp,		spawn,	SHCMD("xbacklight +10% && pkill -RTMIN+1 dwmblocks") },
+	{ 0,							XF86XK_MonBrightnessDown,	spawn,	SHCMD("xbacklight -10% && pkill -RTMIN+1 dwmblocks") },
+	{ 0,							XK_Print,					spawn,	SHCMD("flameshot full -c") },
 };
 
 /* button definitions */
-- 
2.27.0


From 1e8ffa626ae4c22d7ee7d4d9d7c84ac3131961ad Mon Sep 17 00:00:00 2001
From: Justinas Grigas <jstn_as@protonmail.com>
Date: Sat, 20 Jun 2020 21:30:59 +0100
Subject: [PATCH 19/19] Changed volume keys to shcmd.

---
 config.def.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/config.def.h b/config.def.h
index b240a7b..a87da02 100644
--- a/config.def.h
+++ b/config.def.h
@@ -136,9 +136,9 @@ static Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
-	{ 0,							XF86XK_AudioMute,			spawn,	SHCMD("pactl set-sink-mute 0 toggle") },
-	{ 0,							XF86XK_AudioRaiseVolume,	spawn,	SHCMD("pactl set-sink-volume 0 +10%") },
-	{ 0,							XF86XK_AudioLowerVolume,	spawn,	SHCMD("pactl set-sink-volume 0 -10%") },
+	{ 0,							XF86XK_AudioMute,			spawn,	SHCMD("pactl set-sink-mute 0 toggle && pkill -RTMIN+2 dwmblocks") },
+	{ 0,							XF86XK_AudioRaiseVolume,	spawn,	SHCMD("pactl set-sink-volume 0 +10% && pkill -RTMIN+2 dwmblocks") },
+	{ 0,							XF86XK_AudioLowerVolume,	spawn,	SHCMD("pactl set-sink-volume 0 -10% && pkill -RTMIN+2 dwmblocks") },
 	{ 0,							XF86XK_MonBrightnessUp,		spawn,	SHCMD("xbacklight +10% && pkill -RTMIN+1 dwmblocks") },
 	{ 0,							XF86XK_MonBrightnessDown,	spawn,	SHCMD("xbacklight -10% && pkill -RTMIN+1 dwmblocks") },
 	{ 0,							XK_Print,					spawn,	SHCMD("flameshot full -c") },
-- 
2.27.0

